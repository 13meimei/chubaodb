// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dspb/kv.proto

#ifndef PROTOBUF_dspb_2fkv_2eproto__INCLUDED
#define PROTOBUF_dspb_2fkv_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace dspb {
class KvDeleteRequest;
class KvDeleteRequestDefaultTypeInternal;
extern KvDeleteRequestDefaultTypeInternal _KvDeleteRequest_default_instance_;
class KvDeleteResponse;
class KvDeleteResponseDefaultTypeInternal;
extern KvDeleteResponseDefaultTypeInternal _KvDeleteResponse_default_instance_;
class KvGetRequest;
class KvGetRequestDefaultTypeInternal;
extern KvGetRequestDefaultTypeInternal _KvGetRequest_default_instance_;
class KvGetResponse;
class KvGetResponseDefaultTypeInternal;
extern KvGetResponseDefaultTypeInternal _KvGetResponse_default_instance_;
class KvPutRequest;
class KvPutRequestDefaultTypeInternal;
extern KvPutRequestDefaultTypeInternal _KvPutRequest_default_instance_;
class KvPutResponse;
class KvPutResponseDefaultTypeInternal;
extern KvPutResponseDefaultTypeInternal _KvPutResponse_default_instance_;
}  // namespace dspb

namespace dspb {

namespace protobuf_dspb_2fkv_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dspb_2fkv_2eproto

// ===================================================================

class KvGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dspb.KvGetRequest) */ {
 public:
  KvGetRequest();
  virtual ~KvGetRequest();

  KvGetRequest(const KvGetRequest& from);

  inline KvGetRequest& operator=(const KvGetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvGetRequest(KvGetRequest&& from) noexcept
    : KvGetRequest() {
    *this = ::std::move(from);
  }

  inline KvGetRequest& operator=(KvGetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvGetRequest& default_instance();

  static inline const KvGetRequest* internal_default_instance() {
    return reinterpret_cast<const KvGetRequest*>(
               &_KvGetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(KvGetRequest* other);
  friend void swap(KvGetRequest& a, KvGetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  KvGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvGetRequest& from);
  void MergeFrom(const KvGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dspb.KvGetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend struct protobuf_dspb_2fkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dspb.KvGetResponse) */ {
 public:
  KvGetResponse();
  virtual ~KvGetResponse();

  KvGetResponse(const KvGetResponse& from);

  inline KvGetResponse& operator=(const KvGetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvGetResponse(KvGetResponse&& from) noexcept
    : KvGetResponse() {
    *this = ::std::move(from);
  }

  inline KvGetResponse& operator=(KvGetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvGetResponse& default_instance();

  static inline const KvGetResponse* internal_default_instance() {
    return reinterpret_cast<const KvGetResponse*>(
               &_KvGetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(KvGetResponse* other);
  friend void swap(KvGetResponse& a, KvGetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvGetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  KvGetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvGetResponse& from);
  void MergeFrom(const KvGetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dspb.KvGetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_dspb_2fkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvPutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dspb.KvPutRequest) */ {
 public:
  KvPutRequest();
  virtual ~KvPutRequest();

  KvPutRequest(const KvPutRequest& from);

  inline KvPutRequest& operator=(const KvPutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvPutRequest(KvPutRequest&& from) noexcept
    : KvPutRequest() {
    *this = ::std::move(from);
  }

  inline KvPutRequest& operator=(KvPutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvPutRequest& default_instance();

  static inline const KvPutRequest* internal_default_instance() {
    return reinterpret_cast<const KvPutRequest*>(
               &_KvPutRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(KvPutRequest* other);
  friend void swap(KvPutRequest& a, KvPutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvPutRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  KvPutRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvPutRequest& from);
  void MergeFrom(const KvPutRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvPutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:dspb.KvPutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct protobuf_dspb_2fkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvPutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dspb.KvPutResponse) */ {
 public:
  KvPutResponse();
  virtual ~KvPutResponse();

  KvPutResponse(const KvPutResponse& from);

  inline KvPutResponse& operator=(const KvPutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvPutResponse(KvPutResponse&& from) noexcept
    : KvPutResponse() {
    *this = ::std::move(from);
  }

  inline KvPutResponse& operator=(KvPutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvPutResponse& default_instance();

  static inline const KvPutResponse* internal_default_instance() {
    return reinterpret_cast<const KvPutResponse*>(
               &_KvPutResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(KvPutResponse* other);
  friend void swap(KvPutResponse& a, KvPutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvPutResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  KvPutResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvPutResponse& from);
  void MergeFrom(const KvPutResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvPutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dspb.KvPutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_dspb_2fkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvDeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dspb.KvDeleteRequest) */ {
 public:
  KvDeleteRequest();
  virtual ~KvDeleteRequest();

  KvDeleteRequest(const KvDeleteRequest& from);

  inline KvDeleteRequest& operator=(const KvDeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvDeleteRequest(KvDeleteRequest&& from) noexcept
    : KvDeleteRequest() {
    *this = ::std::move(from);
  }

  inline KvDeleteRequest& operator=(KvDeleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvDeleteRequest& default_instance();

  static inline const KvDeleteRequest* internal_default_instance() {
    return reinterpret_cast<const KvDeleteRequest*>(
               &_KvDeleteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(KvDeleteRequest* other);
  friend void swap(KvDeleteRequest& a, KvDeleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvDeleteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  KvDeleteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvDeleteRequest& from);
  void MergeFrom(const KvDeleteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvDeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:dspb.KvDeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend struct protobuf_dspb_2fkv_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvDeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dspb.KvDeleteResponse) */ {
 public:
  KvDeleteResponse();
  virtual ~KvDeleteResponse();

  KvDeleteResponse(const KvDeleteResponse& from);

  inline KvDeleteResponse& operator=(const KvDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvDeleteResponse(KvDeleteResponse&& from) noexcept
    : KvDeleteResponse() {
    *this = ::std::move(from);
  }

  inline KvDeleteResponse& operator=(KvDeleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvDeleteResponse& default_instance();

  static inline const KvDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const KvDeleteResponse*>(
               &_KvDeleteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(KvDeleteResponse* other);
  friend void swap(KvDeleteResponse& a, KvDeleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvDeleteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  KvDeleteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvDeleteResponse& from);
  void MergeFrom(const KvDeleteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dspb.KvDeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_dspb_2fkv_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KvGetRequest

// bytes key = 1;
inline void KvGetRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvGetRequest::key() const {
  // @@protoc_insertion_point(field_get:dspb.KvGetRequest.key)
  return key_.GetNoArena();
}
inline void KvGetRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dspb.KvGetRequest.key)
}
#if LANG_CXX11
inline void KvGetRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dspb.KvGetRequest.key)
}
#endif
inline void KvGetRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dspb.KvGetRequest.key)
}
inline void KvGetRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dspb.KvGetRequest.key)
}
inline ::std::string* KvGetRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dspb.KvGetRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvGetRequest::release_key() {
  // @@protoc_insertion_point(field_release:dspb.KvGetRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvGetRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dspb.KvGetRequest.key)
}

// -------------------------------------------------------------------

// KvGetResponse

// int32 code = 1;
inline void KvGetResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 KvGetResponse::code() const {
  // @@protoc_insertion_point(field_get:dspb.KvGetResponse.code)
  return code_;
}
inline void KvGetResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:dspb.KvGetResponse.code)
}

// bytes value = 2;
inline void KvGetResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvGetResponse::value() const {
  // @@protoc_insertion_point(field_get:dspb.KvGetResponse.value)
  return value_.GetNoArena();
}
inline void KvGetResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dspb.KvGetResponse.value)
}
#if LANG_CXX11
inline void KvGetResponse::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dspb.KvGetResponse.value)
}
#endif
inline void KvGetResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dspb.KvGetResponse.value)
}
inline void KvGetResponse::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dspb.KvGetResponse.value)
}
inline ::std::string* KvGetResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:dspb.KvGetResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvGetResponse::release_value() {
  // @@protoc_insertion_point(field_release:dspb.KvGetResponse.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvGetResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:dspb.KvGetResponse.value)
}

// -------------------------------------------------------------------

// KvPutRequest

// bytes key = 1;
inline void KvPutRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvPutRequest::key() const {
  // @@protoc_insertion_point(field_get:dspb.KvPutRequest.key)
  return key_.GetNoArena();
}
inline void KvPutRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dspb.KvPutRequest.key)
}
#if LANG_CXX11
inline void KvPutRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dspb.KvPutRequest.key)
}
#endif
inline void KvPutRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dspb.KvPutRequest.key)
}
inline void KvPutRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dspb.KvPutRequest.key)
}
inline ::std::string* KvPutRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dspb.KvPutRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvPutRequest::release_key() {
  // @@protoc_insertion_point(field_release:dspb.KvPutRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvPutRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dspb.KvPutRequest.key)
}

// bytes value = 2;
inline void KvPutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvPutRequest::value() const {
  // @@protoc_insertion_point(field_get:dspb.KvPutRequest.value)
  return value_.GetNoArena();
}
inline void KvPutRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dspb.KvPutRequest.value)
}
#if LANG_CXX11
inline void KvPutRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dspb.KvPutRequest.value)
}
#endif
inline void KvPutRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dspb.KvPutRequest.value)
}
inline void KvPutRequest::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dspb.KvPutRequest.value)
}
inline ::std::string* KvPutRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:dspb.KvPutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvPutRequest::release_value() {
  // @@protoc_insertion_point(field_release:dspb.KvPutRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvPutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:dspb.KvPutRequest.value)
}

// -------------------------------------------------------------------

// KvPutResponse

// int32 code = 1;
inline void KvPutResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 KvPutResponse::code() const {
  // @@protoc_insertion_point(field_get:dspb.KvPutResponse.code)
  return code_;
}
inline void KvPutResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:dspb.KvPutResponse.code)
}

// -------------------------------------------------------------------

// KvDeleteRequest

// bytes key = 1;
inline void KvDeleteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvDeleteRequest::key() const {
  // @@protoc_insertion_point(field_get:dspb.KvDeleteRequest.key)
  return key_.GetNoArena();
}
inline void KvDeleteRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dspb.KvDeleteRequest.key)
}
#if LANG_CXX11
inline void KvDeleteRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dspb.KvDeleteRequest.key)
}
#endif
inline void KvDeleteRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dspb.KvDeleteRequest.key)
}
inline void KvDeleteRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dspb.KvDeleteRequest.key)
}
inline ::std::string* KvDeleteRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:dspb.KvDeleteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvDeleteRequest::release_key() {
  // @@protoc_insertion_point(field_release:dspb.KvDeleteRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvDeleteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:dspb.KvDeleteRequest.key)
}

// -------------------------------------------------------------------

// KvDeleteResponse

// int32 code = 1;
inline void KvDeleteResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 KvDeleteResponse::code() const {
  // @@protoc_insertion_point(field_get:dspb.KvDeleteResponse.code)
  return code_;
}
inline void KvDeleteResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:dspb.KvDeleteResponse.code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dspb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dspb_2fkv_2eproto__INCLUDED
